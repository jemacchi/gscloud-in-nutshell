rabbitmq:
  enabled: true
  resources:
    limits:
      cpu: 2
      memory: 2Gi
    requests:
      cpu: 0.1
      memory: 512Mi
  image:
    registry: docker.io
    repository: bitnami/rabbitmq
    tag: 3.9.13-debian-10-r14
  auth:
    username: geoserver
    password: password
    erlangCookie: cookie
  persistence:
    enabled: false

postgresql:
  enabled: true
  global: 
    postgresql:
      auth:
        postgresPassword: g30s3rv3r

pgbouncer:
  replicaCount: 1
  config:
    adminPassword: password
    authUser: postgres
    authPassword: g30s3rv3r
    databases:
      postgres:
        host: gs-cloud-pgconfig-postgresql-hl
        port: 5432
        dbname: postgres
    pgbouncer:
      listen_addr: "0.0.0.0"
      listen_port: 5432
      auth_type: "md5"
      max_client_conn: 100
      default_pool_size: 20
      ignore_startup_parameters: extra_float_digits
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 50m
      memory: 64Mi
  service:
    type: ClusterIP
    port: 5432

additionalVolumes: &additional-volumes
  gs-cloud-optionals:
    configMap:
      name: geoserver-datasources-env

additionalVolumeMounts: &additional-volume-mounts
  /etc/gscloud-custom:
    name: "gs-cloud-optionals"

env: &env-override
  GEOSERVER_BASE_PATH:
    # NB: do not put a trailing '/' character
    value: '/geoserver'
  SPRING_PROFILES_ACTIVE:
    value: standalone,pgconfig
  SPRING_CONFIG_ADDITIONAL_LOCATION:
    value: 'optional:file:/etc/gscloud-custom/jndi.yml,optional:file:/etc/gscloud-custom/values.yml'
  GWC_ENABLED:
    value: 'false'
  WEBUI_WCS_ENABLED:
    value: 'false'
  WEBUI_WMS_ENABLED:
    value: 'true'
  GEOWEBCACHE_CACHE_DIR:
    value: '/opt/app/data_directory/cache'
  JAVA_OPTS:
    value: '$(JAVA_OPTS_DEFAULT) -XshowSettings:system'
  RABBITMQ_HOST:
    value: 'gs-cloud-pgconfig-rabbitmq'
  RABBITMQ_USER:
    value: 'geoserver'
  RABBITMQ_PASSWORD:
    type: secret
    name: 'gs-cloud-pgconfig-rabbitmq'
    key: 'rabbitmq-password'

common-service-values: &common-service-values
  volumes:
    <<: *additional-volumes

common-container-spring-values: &common-container-spring-values
  env:
    <<: *env-override
  volumeMounts:
    <<: *additional-volume-mounts

geoservercloud:
  global:
    profile: standalone,pgconfig
    image:
      pullPolicy: IfNotPresent
  geoserver:
    ingress:
      enabled: true
    services:
      gateway:
        <<: *common-service-values
        ingress:
          enabled: true
          path: /geoserver/
        containers:
          spring:
            <<: *common-container-spring-values
      webui:
        enabled: true
        replicaCount: 1
        <<: *common-service-values
        containers:
          spring:
            <<: *common-container-spring-values
      rest:
        enabled: true
        replicaCount: 1
        <<: *common-service-values
        containers:
          spring:
            <<: *common-container-spring-values
      wms:
        enabled: true
        replicaCount: 1
        hpa:
          enabled: true
          minReplicas: 1
          maxReplicas: 16
          metrics:
            - type: Resource
              resource:
                name: cpu
                target:
                  type: Utilization
                  averageUtilization: 70
        <<: *common-service-values
        containers:
          spring:
            <<: *common-container-spring-values
      wfs:
        enabled: true
        replicaCount: 1
        <<: *common-service-values
        containers:
          spring:
            <<: *common-container-spring-values
      wps:
        enabled: false
        replicaCount: 0
      wcs:
        enabled: false
        replicaCount: 0
      gwc:
        enabled: false
        replicaCount: 0
